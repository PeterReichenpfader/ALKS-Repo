ALKS - Systemarchitektur SysML
=============================

The "ALKS Regulation UN R157" ECE/TRANS/WP.29/2020/81 <sup>[[1]](https://undocs.org/ECE/TRANS/WP.29/2020/81)</sup>  is necessary for the approval of an "Automated Lane Keeping System" on motorways presented in the [UNECE Press Release](https://www.unece.org/info/media/presscurrent-press-h/transport/2020/un-regulation-on-automated-lane-keeping-systems-is-milestone-for-safe-introduction-of-automated-vehicles-in-traffic/doc.html).
The Systems Modeling Language (SysML) is a general-purpose modeling language for systems engineering applications. It supports the specification, analysis, design, verification and validation of a broad range of systems and systems-of-systems.<sup>[[2]](https://en.wikipedia.org/wiki/Systems_Modeling_Language)</sup>

# Goal
This project intends to formally describe the system architecture of the Automated Lane Keeping Assistant as defined in UN R157 with the intention to map the necessary tests needed to comply with international regulation and certification of the function to different test instances (e.g. HIL, MIL, SIL). Eventually the tests for software in the loop (SIL) should be executed.

# Requirements and Setup
Clone the repository to your local machine.

Minimum requirements:
- OpenJDK > 15.0.2 [download](https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_windows-x64_bin.zip)
- Eclipse IDE 2020-12 [download](https://www.eclipse.org/downloads/download.php?file=/oomph/epp/2020-12/R/eclipse-inst-jre-win64.exe)
- Papyrus < 5.0.0 (Workbench installation)

## Windows

### OpenJDK
1. Extract the zip file into a folder, e.g. C:\Program Files\Java\ and it will create a jdk-11 folder (where the bin folder is a direct sub-folder). You may need Administrator privileges to extract the zip file to this location.
2. Set a PATH:
    Select Control Panel and then System.
    Click Advanced and then Environment Variables.
    Add the location of the bin folder of the JDK installation to the PATH variable in System Variables.
    The following is a typical value for the PATH variable: C:\WINDOWS\system32;C:\WINDOWS;"C:\Program Files\Java\jdk-11\bin"
3. Set JAVA_HOME:
    Under System Variables, click New.
    Enter the variable name as JAVA_HOME.
    Enter the variable value as the installation path of the JDK (without the bin sub-folder).
    Click OK.
    Click Apply Changes.
    Configure the JDK in your IDE (e.g. IntelliJ or Eclipse).

To see if it worked, open up the Command Prompt and type java -version and see if it prints your newly installed JDK.

If you want to uninstall - just undo the above steps.

Note: You can also point JAVA_HOME to the folder of your JDK installations and then set the PATH variable to %JAVA_HOME%\bin. So when you want to change the JDK you change only the JAVA_HOME variable and leave PATH as it is.

### Eclipse
TBD
- Eclipse Modeling Tools

### Papyrus
Help -> Install new software
In the "Work with" section of "Available Software", select the release of interest (e.g., Neon)
In the type filter, type "Papyrus"
Select "Papyrus UML" and, optionally, the model comparison feature.
Select [Next]
Select [Next] again to the details
Accept the licenses and click [Finish].
Enjoy modeling!

Repeat the same process for:
Add the following URLs:
+ Nighty builds fix: https://download.eclipse.org/modeling/mdt/papyrus/updates/nightly/master/
+ SysML 1.4: https://download.eclipse.org/modeling/mdt/papyrus/components/sysml14/
- type filter, type "EMF compare"
- type filter, type "Papyrus SysML Category"

Note: If an error occurs install the proposed packages.

## Linux
TBD

```bash
sudo apt-get update
sudo apt-get install openjdk-15-jdk
export JAVA_HOME=/usr/lib/jvm/openjdk-15-jdk
export PATH=$PATH:$JAVA_HOME/bin
```

## Show the model

- Open Eclipse
- Window -> Perspective -> Open Perspective -> Other: Select Papyrus
- Open project
